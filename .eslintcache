[{"/Users/minhpham/Desktop/projects/bidesite/src/reportWebVitals.ts":"1","/Users/minhpham/Desktop/projects/bidesite/src/App.tsx":"2","/Users/minhpham/Desktop/projects/bidesite/src/Provider.tsx":"3","/Users/minhpham/Desktop/projects/bidesite/src/index.tsx":"4","/Users/minhpham/Desktop/projects/bidesite/src/graphql/index.tsx":"5","/Users/minhpham/Desktop/projects/bidesite/src/Router.tsx":"6","/Users/minhpham/Desktop/projects/bidesite/src/pages/home.tsx":"7","/Users/minhpham/Desktop/projects/bidesite/src/pages/body.tsx":"8","/Users/minhpham/Desktop/projects/bidesite/src/containers/Header/index.tsx":"9","/Users/minhpham/Desktop/projects/bidesite/src/components/productgallery/index.tsx":"10","/Users/minhpham/Desktop/projects/bidesite/src/containers/Header2/index.tsx":"11","/Users/minhpham/Desktop/projects/bidesite/src/components/productgallery2/index.tsx":"12","/Users/minhpham/Desktop/projects/bidesite/src/icons/GmailIcon/index.tsx":"13","/Users/minhpham/Desktop/projects/bidesite/src/icons/WaykiChain/index.tsx":"14","/Users/minhpham/Desktop/projects/bidesite/src/theme/index.tsx":"15","/Users/minhpham/Desktop/projects/bidesite/src/icons/CheckMarkIcon/index.tsx":"16","/Users/minhpham/Desktop/projects/bidesite/src/containers/Header3/index.tsx":"17","/Users/minhpham/Desktop/projects/bidesite/src/containers/DropDownHeader/index.tsx":"18","/Users/minhpham/Desktop/projects/bidesite/src/components/gridlayout/index.tsx":"19","/Users/minhpham/Desktop/projects/bidesite/src/containers/Footer/index.tsx":"20","/Users/minhpham/Desktop/projects/bidesite/src/containers/SearchResults/index.tsx":"21","/Users/minhpham/Desktop/projects/bidesite/src/components/SearchResultCard/index.tsx":"22"},{"size":425,"mtime":1611168298590,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1612189869509,"results":"25","hashOfConfig":"24"},{"size":595,"mtime":1612732006940,"results":"26","hashOfConfig":"24"},{"size":821,"mtime":1612189735272,"results":"27","hashOfConfig":"24"},{"size":642,"mtime":1611854860646,"results":"28","hashOfConfig":"24"},{"size":2412,"mtime":1613631870330,"results":"29","hashOfConfig":"24"},{"size":13595,"mtime":1613440085667,"results":"30","hashOfConfig":"24"},{"size":344,"mtime":1611611502069,"results":"31","hashOfConfig":"24"},{"size":5351,"mtime":1613433719403,"results":"32","hashOfConfig":"24"},{"size":4181,"mtime":1613697832439,"results":"33","hashOfConfig":"24"},{"size":3813,"mtime":1612765309075,"results":"34","hashOfConfig":"24"},{"size":4365,"mtime":1613363960631,"results":"35","hashOfConfig":"24"},{"size":3295,"mtime":1612721130592,"results":"36","hashOfConfig":"24"},{"size":16799,"mtime":1612724848701,"results":"37","hashOfConfig":"24"},{"size":17801,"mtime":1613624432934,"results":"38","hashOfConfig":"24"},{"size":1662,"mtime":1612737510790,"results":"39","hashOfConfig":"24"},{"size":8077,"mtime":1613361051984,"results":"40","hashOfConfig":"24"},{"size":2096,"mtime":1613432619416,"results":"41","hashOfConfig":"24"},{"size":2514,"mtime":1612836157721,"results":"42","hashOfConfig":"24"},{"size":1932,"mtime":1613787113333,"results":"43","hashOfConfig":"24"},{"size":21339,"mtime":1613853961062,"results":"44","hashOfConfig":"24"},{"size":1595,"mtime":1613645358851,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tnpim5",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"/Users/minhpham/Desktop/projects/bidesite/src/reportWebVitals.ts",[],"/Users/minhpham/Desktop/projects/bidesite/src/App.tsx",["100","101"],"import React, { FC, CSSProperties } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { QueryFunction } from './graphql';\n\nexport interface AppProps {\n  rootStyle?: CSSProperties;\n}\n\nconst App: FC<AppProps> = ({children, rootStyle}) => {\n  return (\n    <div className=\"MyApp\">\n      \n      {children}\n    </div>\n  );\n}\n\nexport default App;\n",["102","103"],"/Users/minhpham/Desktop/projects/bidesite/src/Provider.tsx",["104","105","106"],"import React, { Component } from 'react';\nimport { ApolloProvider, InMemoryCache } from  '@apollo/react-hooks';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport client from './graphql';\nimport { render } from 'react-dom';\nimport theme from \"theme\";\n\nexport interface ProviderProps {\n    children: any;\n}\n\nexport const Provider: React.FC<ProviderProps> = ({ children }) => {\n    return(\n        <ApolloProvider client={client}>\n            <ThemeProvider theme={theme}>\n                {children}\n            </ThemeProvider>\n        </ApolloProvider>\n    );\n}\n\nexport default Provider;\n",["107","108"],"/Users/minhpham/Desktop/projects/bidesite/src/index.tsx",[],["109","110"],"/Users/minhpham/Desktop/projects/bidesite/src/graphql/index.tsx",[],"/Users/minhpham/Desktop/projects/bidesite/src/Router.tsx",["111","112","113","114","115","116"],"import React, { FC, ReactNode } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Footer from \"./containers/Footer\";\nimport Header from \"header\";\nimport Body from \"./pages/body\";\nimport Home from \"./pages/home\";\nimport ProductGallery from \"./components/productgallery\";\nimport { QueryFunction } from './graphql';\nimport Header2 from \"./containers/Header2\";\nimport ProductGallery2 from \"./components/productgallery2\";\nimport Header3 from \"./containers/Header3\";\nimport DropDownHeader from \"./containers/DropDownHeader\";\nimport ProductGalleryMiners from \"./components/productgalleryMiners\";\nimport ResultsPage from \"./components/searchResultsPage\";\nimport SearchResults from \"searchresults\";\n\nimport CSSGrid from \"./components/gridlayout\";\n\n\nexport interface RouterProps {\n    //extraRoutes?: ReactNode | Node;\n    disableHeaderFooter: Boolean;\n}\n\nconst Router: FC<RouterProps> = ({ disableHeaderFooter }) => {\n    return (\n        <React.Fragment>\n            {!disableHeaderFooter && <Route component={Header} />}\n            <Route component={DropDownHeader} />\n            \n            \n            \n            <Route  \n                render={ props => (\n                    <Body {...props}>\n                        <Switch>\n                            <Route path=\"/\" component={Home} exact/>\n                            <Route path=\"/productgallery\" \n                                component={ProductGallery} exact \n                            />\n                            <Route path=\"/productgallery2\" \n                                component={ProductGallery2} exact \n                            />\n                            <Route path=\"/grid\"\n                                component={CSSGrid} exact\n                            />\n                            <Route path=\"/productgalleryminers\"\n                                component={ProductGalleryMiners} exact\n                            />\n                            <Route path=\"/searchresults\"\n                                component={SearchResults} exact\n                            />\n                        </Switch>\n                    </Body>\n                )}\n            />\n           \n            {!disableHeaderFooter && <Route component={Footer} />}\n            \n        </React.Fragment>\n    )\n}\n\nexport default Router;\n\n\n// this is the connected component - graphql\n// <QueryFunction />",["117","118"],"/Users/minhpham/Desktop/projects/bidesite/src/pages/home.tsx",["119","120","121"],"import { makeStyles, Typography } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { green } from \"@material-ui/core/colors\";\nimport React, { FC } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport miniMiner from './miniMiner.jpg';\n\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 30,\n        paddingBottom: 30,\n        boxShadow: '0px 0px 0px 1px',\n    },\n    image: {\n        maxwidth: 150,\n        height: '10em',\n        //textAlign: 'center',\n    },\n    scrollingwrapper: {\n        //display: 'flex',\n        //flexWrap: 'nowrap',\n        //overflowX: 'auto',\n    },\n    scrollitem: {\n        //flex:  '0 0 auto',\n        backgroundColor: '#fafafa',\n    },\n    card: {\n        backgroundColor: '#fafafa',\n        //color: theme.pallette.primary.contrastText,\n        boxShadow: \"none\",\n        padding: '0px',\n    },\n    smallheading: {\n        textAlign: 'left',\n        margin: '4px 20px',\n    }\n});\n\nexport interface HomeProps { };\n\nconst Home: FC<HomeProps> = () => {\n    const classes = useStyles();\n\n    return(\n        <div>\n        <div\n            className={classes.root}\n        >\n            <h4 className={classes.smallheading}>Our picks for you</h4>\n            <Grid container spacing={1} className={classes.scrollingwrapper}>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image='/images/digitalWallet.jpg' className={classes.image}/>\n                                <Typography>\n                                    Homepage\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/miniMiner.jpg\" className={classes.image} />\n                                <Typography>\n                                    Mini Miner\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"/images/bitcoin.jpg\" className={classes.image}/>\n                                <Typography>\n                                    Mini Miner 2\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"/images/redScooter.jpg\" className={classes.image} />\n                                <Typography>\n                                    Homepage\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/RTX2080.jpg\" className={classes.image} />\n                                <Typography>\n                                    Mini Miner\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/miniMiner.jpg\" className={classes.image}/>\n                                <Typography>\n                                    Mini Miner 2\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n            </Grid>\n        </div>\n\n        <div className={classes.root}>\n        <h4 className={classes.smallheading}>Recently viewed</h4>\n            <Grid container spacing={1} className={classes.scrollingwrapper}>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image='images/coolGraphicsCard.jpg' className={classes.image}/>\n                                <Typography>\n                                    Homepage\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/rig.jpg\" className={classes.image} />\n                                <Typography>\n                                    Mini Miner\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/scateboard.jpg\" className={classes.image}/>\n                                <Typography>\n                                    Mini Miner 2\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"/images/RTX2080.jpg\" className={classes.image} />\n                                <Typography>\n                                    Homepage\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/miniWallet.jpg\" className={classes.image} />\n                                <Typography>\n                                    Mini Miner\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/coolGraphicsCard.jpg\" className={classes.image}/>\n                                <Typography>\n                                    Mini Miner 2\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n            </Grid>\n        </div>\n\n        <div className={classes.root}>\n        <h4 className={classes.smallheading}>Exciting Finds</h4>\n            <Grid container spacing={1} className={classes.scrollingwrapper}>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image='images/coolGraphicsCard.jpg' className={classes.image}/>\n                                <Typography>\n                                    Homepage\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/rig.jpg\" className={classes.image} />\n                                <Typography>\n                                    Mini Miner\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/scateboard.jpg\" className={classes.image}/>\n                                <Typography>\n                                    Mini Miner 2\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"/images/RTX2080.jpg\" className={classes.image} />\n                                <Typography>\n                                    Homepage\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}>\n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/miniWallet.jpg\" className={classes.image} />\n                                <Typography>\n                                    Mini Miner\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n                <Grid item className={classes.scrollitem} xs={6} sm={4} md={2} lg={2} xl={2}>\n                    <CardActionArea onClick={() => {alert('clicked')}}> \n                        <Card className={classes.card}>\n                            <CardContent>\n                                <CardMedia image=\"images/coolGraphicsCard.jpg\" className={classes.image}/>\n                                <Typography>\n                                    Mini Miner 2\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardActionArea>\n                </Grid>\n            </Grid>\n        </div>\n        </div>\n    );\n}\n\nexport default Home;","/Users/minhpham/Desktop/projects/bidesite/src/pages/body.tsx",[],["122","123"],"/Users/minhpham/Desktop/projects/bidesite/src/containers/Header/index.tsx",["124","125","126"],"/Users/minhpham/Desktop/projects/bidesite/src/components/productgallery/index.tsx",["127","128","129","130","131","132","133","134","135","136","137"],"/Users/minhpham/Desktop/projects/bidesite/src/containers/Header2/index.tsx",["138","139","140","141"],"/Users/minhpham/Desktop/projects/bidesite/src/components/productgallery2/index.tsx",["142","143","144","145","146","147","148","149","150"],"/Users/minhpham/Desktop/projects/bidesite/src/icons/GmailIcon/index.tsx",[],"/Users/minhpham/Desktop/projects/bidesite/src/icons/WaykiChain/index.tsx",[],"/Users/minhpham/Desktop/projects/bidesite/src/theme/index.tsx",["151","152","153","154"],"/Users/minhpham/Desktop/projects/bidesite/src/icons/CheckMarkIcon/index.tsx",[],"/Users/minhpham/Desktop/projects/bidesite/src/containers/Header3/index.tsx",["155","156","157","158","159","160"],"/Users/minhpham/Desktop/projects/bidesite/src/containers/DropDownHeader/index.tsx",["161","162"],"/Users/minhpham/Desktop/projects/bidesite/src/components/gridlayout/index.tsx",[],"/Users/minhpham/Desktop/projects/bidesite/src/containers/Footer/index.tsx",[],"/Users/minhpham/Desktop/projects/bidesite/src/containers/SearchResults/index.tsx",["163","164","165","166","167","168","169","170","171"],"/Users/minhpham/Desktop/projects/bidesite/src/components/SearchResultCard/index.tsx",["172"],"import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nexport interface someProps {}\n\nconst ImgMediaCard: FC<someProps> = ({}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image=\"/images/digitalWallet.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default ImgMediaCard;",{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"177","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":23},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"173","severity":1,"message":"182","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"183","line":2,"column":26,"nodeType":"175","messageId":"176","endLine":2,"endColumn":39},{"ruleId":"173","severity":1,"message":"184","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"178","replacedBy":"185"},{"ruleId":"180","replacedBy":"186"},{"ruleId":"178","replacedBy":"187"},{"ruleId":"180","replacedBy":"188"},{"ruleId":"173","severity":1,"message":"189","line":1,"column":21,"nodeType":"175","messageId":"176","endLine":1,"endColumn":30},{"ruleId":"173","severity":1,"message":"190","line":2,"column":25,"nodeType":"175","messageId":"176","endLine":2,"endColumn":33},{"ruleId":"173","severity":1,"message":"177","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":23},{"ruleId":"173","severity":1,"message":"191","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":15},{"ruleId":"173","severity":1,"message":"192","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":15},{"ruleId":"173","severity":1,"message":"193","line":14,"column":8,"nodeType":"175","messageId":"176","endLine":14,"endColumn":19},{"ruleId":"178","replacedBy":"194"},{"ruleId":"180","replacedBy":"195"},{"ruleId":"173","severity":1,"message":"196","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":15},{"ruleId":"173","severity":1,"message":"197","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":19},{"ruleId":"173","severity":1,"message":"198","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":17},{"ruleId":"178","replacedBy":"199"},{"ruleId":"180","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":44,"column":34,"nodeType":"203","messageId":"204","endLine":44,"endColumn":36},{"ruleId":"173","severity":1,"message":"205","line":46,"column":12,"nodeType":"175","messageId":"176","endLine":46,"endColumn":20},{"ruleId":"173","severity":1,"message":"206","line":49,"column":11,"nodeType":"175","messageId":"176","endLine":49,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":18,"column":38,"nodeType":"203","messageId":"204","endLine":18,"endColumn":40},{"ruleId":"173","severity":1,"message":"207","line":19,"column":11,"nodeType":"175","messageId":"176","endLine":19,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":44,"column":21,"nodeType":"210","endLine":44,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":53,"column":21,"nodeType":"210","endLine":53,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":62,"column":21,"nodeType":"210","endLine":62,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":71,"column":21,"nodeType":"210","endLine":71,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":80,"column":21,"nodeType":"210","endLine":80,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":89,"column":21,"nodeType":"210","endLine":89,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":98,"column":21,"nodeType":"210","endLine":98,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":107,"column":21,"nodeType":"210","endLine":107,"endColumn":45},{"ruleId":"201","severity":1,"message":"202","line":121,"column":43,"nodeType":"203","messageId":"204","endLine":121,"endColumn":46},{"ruleId":"173","severity":1,"message":"211","line":2,"column":28,"nodeType":"175","messageId":"176","endLine":2,"endColumn":33},{"ruleId":"173","severity":1,"message":"212","line":2,"column":35,"nodeType":"175","messageId":"176","endLine":2,"endColumn":47},{"ruleId":"173","severity":1,"message":"213","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":18},{"ruleId":"173","severity":1,"message":"214","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":35,"column":21,"nodeType":"210","endLine":35,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":44,"column":21,"nodeType":"210","endLine":44,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":53,"column":21,"nodeType":"210","endLine":53,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":62,"column":21,"nodeType":"210","endLine":62,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":71,"column":21,"nodeType":"210","endLine":71,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":80,"column":21,"nodeType":"210","endLine":80,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":89,"column":21,"nodeType":"210","endLine":89,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":98,"column":21,"nodeType":"210","endLine":98,"endColumn":45},{"ruleId":"201","severity":1,"message":"202","line":112,"column":43,"nodeType":"203","messageId":"204","endLine":112,"endColumn":46},{"ruleId":"173","severity":1,"message":"215","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":21},{"ruleId":"173","severity":1,"message":"211","line":2,"column":23,"nodeType":"175","messageId":"176","endLine":2,"endColumn":28},{"ruleId":"173","severity":1,"message":"216","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":20},{"ruleId":"173","severity":1,"message":"196","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":13},{"ruleId":"173","severity":1,"message":"214","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":16},{"ruleId":"173","severity":1,"message":"217","line":18,"column":8,"nodeType":"175","messageId":"176","endLine":18,"endColumn":15},{"ruleId":"173","severity":1,"message":"218","line":20,"column":8,"nodeType":"175","messageId":"176","endLine":20,"endColumn":14},{"ruleId":"173","severity":1,"message":"219","line":121,"column":9,"nodeType":"175","messageId":"176","endLine":121,"endColumn":20},{"ruleId":"173","severity":1,"message":"220","line":125,"column":9,"nodeType":"175","messageId":"176","endLine":125,"endColumn":20},{"ruleId":"173","severity":1,"message":"221","line":130,"column":9,"nodeType":"175","messageId":"176","endLine":130,"endColumn":11},{"ruleId":"173","severity":1,"message":"222","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":31,"column":43,"nodeType":"203","messageId":"204","endLine":31,"endColumn":45},{"ruleId":"173","severity":1,"message":"212","line":2,"column":29,"nodeType":"175","messageId":"176","endLine":2,"endColumn":41},{"ruleId":"173","severity":1,"message":"223","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"173","severity":1,"message":"224","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":23},{"ruleId":"173","severity":1,"message":"225","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":20},{"ruleId":"226","severity":1,"message":"227","line":23,"column":24,"nodeType":"175","messageId":"228","endLine":23,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":54,"column":39,"nodeType":"203","messageId":"204","endLine":54,"endColumn":41},{"ruleId":"208","severity":1,"message":"209","line":225,"column":29,"nodeType":"210","endLine":225,"endColumn":77},{"ruleId":"229","severity":1,"message":"230","line":490,"column":7,"nodeType":"175","messageId":"231","endLine":490,"endColumn":21},{"ruleId":"173","severity":1,"message":"232","line":490,"column":7,"nodeType":"175","messageId":"176","endLine":490,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":19,"column":38,"nodeType":"203","messageId":"204","endLine":19,"endColumn":40},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'QueryFunction' is defined but never used.","no-native-reassign",["233"],"no-negated-in-lhs",["234"],"'Component' is defined but never used.","'InMemoryCache' is defined but never used.","'render' is defined but never used.",["233"],["234"],["233"],["234"],"'ReactNode' is defined but never used.","'Redirect' is defined but never used.","'Header2' is defined but never used.","'Header3' is defined but never used.","'ResultsPage' is defined but never used.",["233"],["234"],"'green' is defined but never used.","'CardActions' is defined but never used.","'miniMiner' is defined but never used.",["233"],["234"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'language' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'classes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Theme' is defined but never used.","'createStyles' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'PaletteType' is defined but never used.","'propsFactory' is defined but never used.","'Popover' is defined but never used.","'Button' is defined but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'id' is assigned a value but never used.","'Toolbar' is defined but never used.","'GridList' is defined but never used.","'GridListTileBar' is defined but never used.","'GridListTile' is defined but never used.","@typescript-eslint/no-use-before-define","'listingData' was used before it was defined.","noUseBeforeDefine","@typescript-eslint/no-redeclare","'newlistingData' is already defined.","redeclared","'newlistingData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]